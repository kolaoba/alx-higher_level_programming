# 101-lazy_matrix_mul.txt

The ``lazy_matrix_mul`` module
=============================

Using the ``lazy_matrix_mul(m_a, m_b)`` function
--------------------------------------------------

This function returns a new matrix representing the multiplication of
``m_a`` by ``m_b``.


Importing the function
	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Testing integer m_a, m_b arguments
================================

	>>> m_a = [
	... [5, 6],
	... [7, 8],
	... ]
	>>> m_b = [
	... [9, 10],
	... [11, 12],
	... ]
	>>> print(lazy_matrix_mul(m_a, m_b))
	[[111 122]
	 [151 166]]

Testing float m_a, m_b arguments
================================

	>>> m_a = [
        ... [5.5, 6.6],
        ... [7.7, 8.8],
        ... ]
        >>> m_b = [
        ... [9.9, 10.5],
        ... [11.5, 12.2],
        ... ]
	>>> print(lazy_matrix_mul(m_a, m_b))
	[[130.35 138.27]
	 [177.43 188.21]]

Testing integer or float arguments
==================================

	>>> print(lazy_matrix_mul([["a", "b"], ["c", 4]], [[1, 2], [1, 2]]))
	Traceback (most recent call last):
		...
	TypeError: invalid data type for einsum

	>>> print(lazy_matrix_mul([[5, 6], [2, 4]], [[1, "c"], [1, 2]]))
        Traceback (most recent call last):
                ...
	TypeError: invalid data type for einsum

Testing empty arguments
===========================

	>>> print(lazy_matrix_mul())
	Traceback (most recent call last):
		...
	TypeError: lazy_matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

	>>> print(lazy_matrix_mul([[]], [[3, 45, 6]]))
        Traceback (most recent call last):
                ...
        ValueError: shapes (1,0) and (1,3) not aligned: 0 (dim 1) != 1 (dim 0)

	>>> print(lazy_matrix_mul([[1, 2], [1, 2]], [[]]))
        Traceback (most recent call last):
                ...
        ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

Invalid matrix multiplication
=====================================

	>>> print(lazy_matrix_mul([[1, 2], [1, 2]], [[1, 2, 3]]))
        Traceback (most recent call last):
                ...
        ValueError: shapes (2,2) and (1,3) not aligned: 2 (dim 1) != 1 (dim 0)

Invalid individual matrices
===========================

	>>> print(lazy_matrix_mul([[1, 2], [1, 2, 3]], [[1, 2], [1, 2]]))
	Traceback (most recent call last):
		...
	ValueError: setting an array element with a sequence.

        >>> print(lazy_matrix_mul([[1, 2], [1, 2]], [[1, 2], [1, 2, 3]]))
        Traceback (most recent call last):
                ...
	ValueError: setting an array element with a sequence.

Testing list of lists
=====================

        >>> print(lazy_matrix_mul([1, 2], [[1, 2], [1, 2]]))
	[3 6]

        >>> print(lazy_matrix_mul([[1, 2], [1, 2]], [1, 2]))
	[5 5]

Testing for list
================

        >>> print(lazy_matrix_mul(2, [[1, 2], [1, 2]]))
        Traceback (most recent call last):
                ...
	ValueError: Scalar operands are not allowed, use '*' instead

        >>> print(lazy_matrix_mul([[1, 2], [1, 2]], 1))
        Traceback (most recent call last):
                ...
	ValueError: Scalar operands are not allowed, use '*' instead
